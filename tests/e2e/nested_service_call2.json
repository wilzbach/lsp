[
  {
    "detail": "Run redis in a Story.",
    "documentation": {
      "kind": "markdown",
      "value": "# _Redis_ Open Microservice\n\n> Wrapper for the Redis key-value store\n\n[![Open Microservice Specification Version](https://img.shields.io/badge/Open%20Microservice-1.0-477bf3.svg)](https://openmicroservices.org) [![Open Microservices Spectrum Chat](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/open-microservices) [![Open Microservices Code of Conduct](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](https://github.com/oms-services/.github/blob/master/CODE_OF_CONDUCT.md) [![Open Microservices Commitzen](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n\n## Introduction\n\nThis project is an example implementation of the [Open Microservice Specification](https://openmicroservices.org), a standard originally created at [Storyscript](https://storyscript.io) for building highly-portable \"microservices\" that expose the events, actions, and APIs inside containerized software.\n\n## Getting Started\n\nThe `oms` command-line interface allows you to interact with Open Microservices. If you're interested in creating an Open Microservice the CLI also helps validate, test, and debug your `oms.yml` implementation!\n\nSee the [oms-cli](https://github.com/microservices/oms) project to learn more!\n\n### Installation\n\n```\nnpm install -g @microservices/oms\n```\n\n## Usage\n\n### Open Microservices CLI Usage\n\nOnce you have the [oms-cli](https://github.com/microservices/oms) installed, you can run any of the following commands from within this project's root directory:\n\n#### Actions\n\n##### set\n\n> Sets 'key' to hold 'value'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| value | `any` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run set \\ \n    -a key='*****' \\ \n    -a value='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### rpush\n\n> Insert 'value' at the end of list stored at 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| value | `any` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run rpush \\ \n    -a key='*****' \\ \n    -a value='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### lpush\n\n> Insert 'value' at the head of list stored at 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| value | `any` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run lpush \\ \n    -a key='*****' \\ \n    -a value='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### lpop\n\n> Removes and returns the first element of the list stored at 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run lpop \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### rpop\n\n> Removes and returns the last element of the list stored at 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run rpop \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### blpop\n\n> Removes and returns the first element of the list stored at 'key'.\nWhen there are no element in the list, the command will not return\nuntil an element got added.\n\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run blpop \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### brpop\n\n> Removes and returns the last element of the list stored at 'key'.\nWhen there are no element in the list, the command will not return\nuntil an elements got added.\n\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run brpop \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### delete\n\n> Removes 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run delete \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### get\n\n> Returns the value of 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run get \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### mget\n\n> Returns the values of multiple 'keys'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| keys | `list` | `false` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run mget \\ \n    -a keys='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### increment\n\n> Increments a number stored at 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| by | `int` | `false` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run increment \\ \n    -a key='*****' \\ \n    -a by='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### decrement\n\n> Decrements a number stored at 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| by | `int` | `false` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run decrement \\ \n    -a key='*****' \\ \n    -a by='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### append\n\n> Appends 'value' to a 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| value | `any` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run append \\ \n    -a key='*****' \\ \n    -a value='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### getSet\n\n> Returns the current value of 'key' and overwrites it with 'value'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| value | `any` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run getSet \\ \n    -a key='*****' \\ \n    -a value='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### setnx\n\n> Set a 'key' to 'value' only if the key does not exist yet.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| value | `any` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run setnx \\ \n    -a key='*****' \\ \n    -a value='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### mset\n\n> Sets multiple 'key'/'value' pairs simultaneously.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| pairs | `map` | `false` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run mset \\ \n    -a pairs='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### msetnx\n\n> Sets multiple 'key'/'value' pairs simultaneously.\nOnly non-existing keys will be set.\n\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| pairs | `map` | `false` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run msetnx \\ \n    -a pairs='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### expire\n\n> Set a timeout on a 'key'.\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | No description provided. |\n| seconds | `int` | `true` | None | No description provided. |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms run expire \\ \n    -a key='*****' \\ \n    -a seconds='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n##### rpop\n\n> RPOP a key constantly, and emit the values as events\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | The key to RPOP |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms subscribe rpop \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n,##### lpop\n\n> LPOP a key constantly, and emit the values as events\n##### Action Arguments\n\n| Argument Name | Type | Required | Default | Description |\n|:------------- |:---- |:-------- |:--------|:----------- |\n| key | `string` | `true` | None | The key to LPOP |\n| REDIS_HOST | `string` | `false` | None | No description provided. |\n| REDIS_PORT | `int` | `false` | None | No description provided. |\n| REDIS_DB | `string` | `false` | None | No description provided. |\n| REDIS_PASSWORD | `string` | `false` | None | No description provided. |\n\n``` shell\noms subscribe lpop \\ \n    -a key='*****' \\ \n    -e REDIS_HOST=$REDIS_HOST \\ \n    -e REDIS_PORT=$REDIS_PORT \\ \n    -e REDIS_DB=$REDIS_DB \\ \n    -e REDIS_PASSWORD=$REDIS_PASSWORD\n```\n\n## Contributing\n\nAll suggestions in how to improve the specification and this guide are very welcome. Feel free share your thoughts in the Issue tracker, or even better, fork the repository to implement your own ideas and submit a pull request.\n\n[![Edit redis on CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/oms-services/redis)\n\nThis project is guided by [Contributor Covenant](https://github.com/oms-services/.github/blob/master/CODE_OF_CONDUCT.md). Please read out full [Contribution Guidelines](https://github.com/oms-services/.github/blob/master/CONTRIBUTING.md).\n\n## Additional Resources\n\n* [Install the CLI](https://github.com/microservices/oms) - The OMS CLI helps developers create, test, validate, and build microservices.\n* [Example OMS Services](https://github.com/oms-services) - Examples of OMS-compliant services written in a variety of languages.\n* [Example Language Implementations](https://github.com/microservices) - Find tooling & language implementations in Node, Python, Scala, Java, Clojure.\n* [Storyscript Hub](https://hub.storyscript.io) - A public registry of OMS services.\n* [Community Chat](https://spectrum.chat/open-microservices) - Have ideas? Questions? Join us on Spectrum.\n"
    },
    "insertTextFormat": 1,
    "kind": 2,
    "label": "redis",
    "sortText": "40-redis",
    "textEdit": {
      "newText": "redis ",
      "range": {
        "end": {
          "character": 20,
          "line": 0
        },
        "start": {
          "character": 16,
          "line": 0
        }
      }
    }
  }
]
