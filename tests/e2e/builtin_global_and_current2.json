[
  {
    "detail": "append(item:int)",
    "documentation": "Builtin: append",
    "filterText": "ls.append",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "append",
    "textEdit": {
      "newText": "ls.append($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "contains(item:int)",
    "documentation": "Builtin: contains",
    "filterText": "ls.contains",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "contains",
    "textEdit": {
      "newText": "ls.contains($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "index(of:int)",
    "documentation": "Builtin: index",
    "filterText": "ls.index",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "index",
    "textEdit": {
      "newText": "ls.index($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "join(sep:string)",
    "documentation": "Builtin: join",
    "filterText": "ls.join",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "join",
    "textEdit": {
      "newText": "ls.join($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "length()",
    "documentation": "Builtin: length",
    "filterText": "ls.length",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "length",
    "textEdit": {
      "newText": "ls.length($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "max()",
    "documentation": "Builtin: max",
    "filterText": "ls.max",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "max",
    "textEdit": {
      "newText": "ls.max($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "min()",
    "documentation": "Builtin: min",
    "filterText": "ls.min",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "min",
    "textEdit": {
      "newText": "ls.min($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "prepend(item:int)",
    "documentation": "Builtin: prepend",
    "filterText": "ls.prepend",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "prepend",
    "textEdit": {
      "newText": "ls.prepend($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "random()",
    "documentation": "Builtin: random",
    "filterText": "ls.random",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "random",
    "textEdit": {
      "newText": "ls.random($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "remove(item:int)",
    "documentation": "Builtin: remove",
    "filterText": "ls.remove",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "remove",
    "textEdit": {
      "newText": "ls.remove($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "replace(by:int item:int)",
    "documentation": "Builtin: replace",
    "filterText": "ls.replace",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "replace",
    "textEdit": {
      "newText": "ls.replace($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "reverse()",
    "documentation": "Builtin: reverse",
    "filterText": "ls.reverse",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "reverse",
    "textEdit": {
      "newText": "ls.reverse($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "slice(start:int)\nslice(end:int start:int)\nslice(end:int)",
    "documentation": "Builtin: slice",
    "filterText": "ls.slice",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "slice",
    "textEdit": {
      "newText": "ls.slice($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "sort()",
    "documentation": "Builtin: sort",
    "filterText": "ls.sort",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "sort",
    "textEdit": {
      "newText": "ls.sort($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "sum()",
    "documentation": "Builtin: sum",
    "filterText": "ls.sum",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "sum",
    "textEdit": {
      "newText": "ls.sum($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  },
  {
    "detail": "unique()",
    "documentation": "Builtin: unique",
    "filterText": "ls.unique",
    "insertTextFormat": 2,
    "kind": 2,
    "label": "unique",
    "textEdit": {
      "newText": "ls.unique($1)",
      "range": {
        "end": {
          "character": 7,
          "line": 2
        },
        "start": {
          "character": 4,
          "line": 2
        }
      }
    }
  }
]
